;;Shivgoraksh


[Variable: PurchaseLV]
	
	Type: String

[#Menu: ExpressIntegrationExp]
		
	Add: Item: ERPNextPurchase  : Call: ERPNextPurchase
	
	[Function: ERPNextPurchase]
		
		List Variable: PurchaseLV

		12 : Delete File: "STPurchase.xml"
		13 : Open File: "STPurchase.xml" : Text : Write
		14 : Truncate File

		16 : Walk Collection: ERPNextPurchaseColl
		18 : Call: PurchaseXML
		152 : List Add: PurchaseLV : $name : $name		
		155 : End Walk

		200 : Close Target File
		210 : SET : IMPORT File : "STPurchase.xml" 	
		220 : Import : Vouchers : Yes

		230 : If : Not $$ImportInfo:Errors > 0		
		240 : 	Call : UpdatePurchaseStatus:($$NumItems:PurchaseLVColl)
		242 : else
		245 : Msg Box: "Error" : "Something Went Wrong, Please contact support"
		250 : End If

		
[Collection: ERPNextPurchaseColl]
	
	Export Header	: "Accept: application/json"
	Export Header	: "Accept-Charset: utf-8"
	Export Header	: "Authorization: " + "token " + @@AuthToken

	Data Source		: HTTP JSON : @@ERPNextHost + '/api/method/express_tally.send_tally.purchase'
	RemoteRequest	: PurchaseReq : UTF8
	JSON Object 	: ERPNextPurchase
	JSON Object Path: "message:1"
	

	[Object: ERPNextPurchase]
		
		Storage : name 					: String
		Storage : supplier				: String
		Storage : supplier_name			: String
		Storage : posting_date  		: String
		Storage : base_rounded_total 	: Number
		Storage : is_return 			: Number
		Storage : rounding_adjustment	: Number
		Storage : docstatus				: String
		Storage : bill_no				: String
		Storage : amended_from			: String
		Storage : supplier_name_in_tally : String

		collection : tpurchaseinvoice : tpurchaseinvoice
		
		[Object: tpurchaseinvoice]
			
			Collection: items : items
			Collection: taxes : taxes
			
			Storage: naming_series : String
			Storage: material_received_by	: String
			Storage: checked_by				: String
			Storage: bill_no				: String
			Storage: bill_date				: String
			Storage: purch_transporter_name : String
			Storage: purch_bilty_no : String
			Storage: purch_bilty_date : String
			Storage: purch_bilty_amount : String		
			Storage: Packages			: String
			Storage: purch_pkgs_uom		: String
			Storage: bilty_weight		: String
			Storage: purch_inv_assess_value	: String
			Storage: purch_inv_amt			: String
			Storage: tax_category			: String
			Storage: remarks				: String
;			Storage: etpl_additional_remarks: String
			Storage: apply_discount_on		: String ;; Net Total, Grand Total
			Storage: discount_amount		: Number

			Storage: supplier				: String
			Storage: supplier_gstin  		: String
			Storage: place_of_supply		: String
			Storage: address_display		: String
			Storage: etpl_suppcnno			: String
			
			Storage: contact_display : String
			Storage: contact_email	: String
			Storage: contact_mobile : String

			Storage: etpl_customer_group : String
			Storage: etpl_city 		: String
			Storage: etpl_tehsil 	: String
			Storage: etpl_district 	: String
			Storage: etpl_pan 		: String
			
			Storage: etpl_dob		: String
			Storage: etpl_dom		: String
			Storage: etpl_pincode	: String
			Storage: etpl_suppcndt 	: String
			Storage : supplier_name_in_tally : String



		[Object: items]
			
			Storage: item_code 				: String
			Storage: item_name 				: String
			Storage: rate	 				: String
			Storage: price_list_rate		: String
			Storage: uom	 				: String
			Storage: amount	 				: Number
			Storage: qty	 				: Number
			Storage: warehouse				: String
			Storage: item_group				: String
			Storage: gst_hsn_code 			: String
			Storage: expense_account		: String
			Storage: income_account			: String
			Storage: batch_no 				: String
			Storage: discount_percentage	: Number
			Storage: item_group				: String
			Storage: item_tax_template 		: String


;;stock journal
			Storage: basic_rate 	: String
			Storage: qty	 		: String
			Storage: s_warehouse	: String
			Storage: t_warehouse	: String
			Storage: amount	 		: String
			Storage: valuation_rate	: String
			Storage: stock_uom		: String



		[Object: taxes]
			
			Storage: account_head	: String
			Storage: tax_amount_after_discount_amount : Number
			Storage: base_tax_amount : Number
			Storage: rate : Number
;; Request Report 

	[Report: PurchaseReq]
		
		Form: PurchaseReq
		
		[Form: PurchaseReq]
			
			Part: PurchaseReq
			Delete: XMLTag

			[Part: PurchaseReq]
					
				Line: PurchaseReq
				Scroll: Vertical

				[Line: PurchaseReq]
					
					Field: PurchaseReqBranch, PurchaseReqSyncFrom
					;XMLTag: "request"
					
				[Field: PurchaseReqBranch]
					
					XMLTag: "company"
					Set as: @@ERPNextBranch
					
				[Field: PurchaseReqSyncFrom]
					
					XMLTag: "date"
					Set as: "2021-04-01" ; @@ERPNextLastSyncOn
					
;; End of Request Report



;; Master Success 

[Function: UpdatePurchaseStatus]
	
	Parameter: processedIds : Number

	08 : If: ##processedIds > 0 
	10 : Walk Collection: UpdatePurchaseColl
	20 : End Walk
	30 : End If
;	40 : Delete File: "STPurchase.xml"

[Collection: UpdatePurchaseColl]
	
	Export Header	: "Accept: application/json"
	Export Header	: "Accept-Charset: utf-8"
	Export Header	: "Authorization: " + "token " + @@AuthToken

	Data Source	 : HTTP JSON: @@ERPNextHost + '/api/method/express_tally.send_tally.customer_update'
	RemoteRequest : UpdatePurchaseRep : UTF8

;; Status Report 

[Report: UpdatePurchaseRep]
	
	Form: UpdatePurchaseRep
	
	[Form: UpdatePurchaseRep]
		
		Part: UpdatePurchaseRep
		Delete: XMLTag

	[Part: UpdatePurchaseRep]
		
		Line: UpdatePurchaseRep
		Scroll: Vertical
		
	[Line: UpdatePurchaseRep]
		
		Field: UpdatePurchaseRep
		Explode: UpdatePurchaseRepExp
		
			[Part: UpdatePurchaseRepExp]
				
				Line: UpdatePurchaseRepExp
				Repeat: UpdatePurchaseRepExp : PurchaseLVColl
				
				[Line: UpdatePurchaseRepExp]
					
					Field: UpdatePurchaseRepExp
					JSONTag: "data"
					
					[Field:UpdatePurchaseRepExp]
						
						Set as: $PurchaseLV
						XMLTag: "docname"
		
		[Field: UpdatePurchaseRep]
			
			Set as: "Purchase Invoice"
			JSONTag: "request_type"
	
	[Collection: PurchaseLVColl]
		
		Data Source: Variable: PurchaseLV 



;;;; Purchase XML

[System: Formula]
	
	ETPurcKey : if $$IsEmpty:$amended_from or $amended_from = "null" then $name else "AMD"+$name

[Function: PurchaseXML]
	
Variable: is_return : Number: $$Number:$is_return
Variable: GSTRate : Number
Variable: Round : String
Variable: vSupplierAccount : String : $$Trim:@@PIsupplier_name ;+ " - " + @@EnableERPNextCmpAbbr
Variable: PurchaseLed : String
Variable: vPostingDate : String: $$GetTallyDate:$posting_date

07 : Walk Collection: tpurchaseinvoice
;08 : 	Do If: ($$IsEmpty:($NAme:Ledger:($$Trim:$supplier))) :  Call: CreateCustomer:$supplier:"Sundry Debtors":$supplier_gstin:$address_display:$place_of_supply
08 : 	Call: CreateCustomer:@@PIsupplier_name:$etpl_customer_group:@@supplier_gstin:@@address_display:@@place_of_supply:$contact_display:$contact_email:$contact_mobile:$etpl_city:$etpl_tehsil:$etpl_district:$etpl_pan:$etpl_dob:$etpl_dom:$etpl_pincode
09 : End Walk

10	:	Write File Line : 	'	    <TALLYMESSAGE xmlns:UDF="TallyUDF">'
20	:	Write File Line : 	'	     <VOUCHER REMOTEID="'+@@ETPurcKey+'" VCHTYPE="'+@@PIVoucherType+'" ACTION="'+@@PIAction+'" OBJVIEW="Invoice Voucher View">'
30	:	Write File Line : 	'	      <ADDRESS.LIST TYPE="String">'
40	:	Do If: Not ($$IsEmpty:$_address1:Ledger:##vSupplierAccount) : Write File Line : 	'	       <ADDRESS>'+$$Trim:($_address1:Ledger:##vSupplierAccount)+'</ADDRESS>'
50	:	Do If: Not ($$IsEmpty:$_address2:Ledger:##vSupplierAccount) : Write File Line : 	'	       <ADDRESS>'+$$Trim:($_address2:Ledger:##vSupplierAccount)+'</ADDRESS>'
60	:	Do If: Not ($$IsEmpty:$_address3:Ledger:##vSupplierAccount) : Write File Line : 	'	       <ADDRESS>'+$$Trim:($_address3:Ledger:##vSupplierAccount)+'</ADDRESS>'
62	:	Do If: Not ($$IsEmpty:$_address4:Ledger:##vSupplierAccount) : Write File Line : 	'	       <ADDRESS>'+$$Trim:($_address4:Ledger:##vSupplierAccount)+'</ADDRESS>'
70	:	Write File Line : 	'	      </ADDRESS.LIST>'
80	:	Write File Line : 	'	      <DATE>'+$$GetTallyDate:$posting_date+'</DATE>'
90	:	Write File Line : 	'	      <GSTREGISTRATIONTYPE>'+$GSTREGISTRATIONTYPE:Ledger:##vSupplierAccount+'</GSTREGISTRATIONTYPE>'
100	:	Write File Line : 	'	      <STATENAME>'+$$Trim:($LedStateName:Ledger:##vSupplierAccount)+'</STATENAME>'
110	:	Write File Line : 	'	      <COUNTRYOFRESIDENCE>'+$CountryName:Ledger:##vSupplierAccount+'</COUNTRYOFRESIDENCE>'
120	:	Write File Line : 	'	      <PARTYGSTIN>'+$PartyGstin:Ledger:##vSupplierAccount+'</PARTYGSTIN>'
130	:	Write File Line : 	'	      <PLACEOFSUPPLY>'+$$Trim:($LedStateName:Ledger:##vSupplierAccount)+'</PLACEOFSUPPLY>'
140	:	Write File Line : 	'	      <PARTYNAME>'+##vSupplierAccount+'</PARTYNAME>'
150	:	Write File Line : 	'	      <PARTYLEDGERNAME>'+##vSupplierAccount+'</PARTYLEDGERNAME>'
160	:	Write File Line : 	'	      <VOUCHERTYPENAME>'+@@PIVoucherType+'</VOUCHERTYPENAME>'
170	:	Write File Line : 	'	      <PARTYMAILINGNAME>'+##vSupplierAccount+'</PARTYMAILINGNAME>'
180	:	Write File Line : 	'	      <CONSIGNEEMAILINGNAME>'+$$Trim:@@CmpMailName+'</CONSIGNEEMAILINGNAME>'
190	:	Write File Line : 	'	      <CONSIGNEESTATENAME>'+$$Trim:@@CmpStateName+'</CONSIGNEESTATENAME>'
200	:	Write File Line : 	'	      <VOUCHERNUMBER>'+$name+'</VOUCHERNUMBER>'
210	:	Write File Line : 	'	      <BASICBASEPARTYNAME>'+##vSupplierAccount+'</BASICBASEPARTYNAME>'
220	:	Write File Line : 	'	      <FBTPAYMENTTYPE>Default</FBTPAYMENTTYPE>'
230	:	Write File Line : 	'	      <PERSISTEDVIEW>Invoice Voucher View</PERSISTEDVIEW>'
240	:	Write File Line : 	'	      <BASICBUYERNAME>'+@@CmpMailName+'</BASICBUYERNAME>'
250	:	Write File Line : 	'	      <CONSIGNEECOUNTRYNAME>'+$CountryName:Company:##SVCurrentCompany+'</CONSIGNEECOUNTRYNAME>'
260	:	Write File Line : 	'	      <VCHENTRYMODE>Item Invoice</VCHENTRYMODE>'
280	:	Write File Line : 	'	      <ISINVOICE>Yes</ISINVOICE>'
282	:	Write File Line : 	'	      <ISVATDUTYPAID>Yes</ISVATDUTYPAID>'

285 : Walk Collection: tpurchaseinvoice

;285a : Set : GSTRate : $$GetIGSTRate

285a : Set: PurchaseLed : @@PIPurchaseLed

286 : Walk Collection: items
288 : Set : GSTRate : $$Number:$item_tax_template
289 : If: $item_group != "Service Item"
290 : Call: CreateItems:$item_name:$item_code:$item_group:$uom:$gst_hsn_code:##GSTRate:##vPostingDate
291 : Do If: ($$IsEmpty:$Name:Godown:$warehouse) : Call: CreateWarehouse:$warehouse

300	:	Write File Line : 	'	      <ALLINVENTORYENTRIES.LIST>'
;310	:	Write File Line : 	'	       <STOCKITEMNAME>'+$item_code+'</STOCKITEMNAME>'
312	:	Write File Line : 	'	       <STOCKITEMNAME>'+$$trim:$item_code+'</STOCKITEMNAME>'
320	:	Write File Line : 	'	       <ISDEEMEDPOSITIVE>'+@@PIDeemedPos+'</ISDEEMEDPOSITIVE>'
340	:	Write File Line : 	'	       <RATE>'+$$String:$price_list_rate+'/'+@@PIUom+'</RATE>'
341 :	Write File Line :	'		   <DISCOUNT>'+$$String:$discount_percentage+'</DISCOUNT>'
350	:	Write File Line : 	'	       <AMOUNT>'+@@PIAmount+'</AMOUNT>'
360	:	Write File Line : 	'	       <ACTUALQTY> '+$$String:@@PIQty+' '+@@PIUom+'</ACTUALQTY>'
370	:	Write File Line : 	'	       <BILLEDQTY> '+$$String:@@PIQty+' '+@@PIUom+'</BILLEDQTY>'
380	:	Write File Line : 	'	       <BATCHALLOCATIONS.LIST>'
390	:	Write File Line : 	'	        <GODOWNNAME>'+@@SIwarehouse+'</GODOWNNAME>'
400	:	Write File Line : 	'	        <BATCHNAME>'+@@SIBatchNO+'</BATCHNAME>'
410	:	Write File Line : 	'	        <AMOUNT>-'+@@PIAmount+'</AMOUNT>'
412 :	Write File Line :	'		    <DISCOUNT>'+$$String:$discount_percentage+'</DISCOUNT>'
420	:	Write File Line : 	'	        <ACTUALQTY> '+$$String:@@PIQty+' '+@@PIUom+'</ACTUALQTY>'
430	:	Write File Line : 	'	        <BILLEDQTY> '+$$String:@@PIQty+' '+@@PIUom+'</BILLEDQTY>'
440	:	Write File Line : 	'	       </BATCHALLOCATIONS.LIST>'
450	:	Write File Line : 	'	       <ACCOUNTINGALLOCATIONS.LIST>'
460	:	Write File Line : 	'	        <LEDGERNAME>'+##PurchaseLed+'</LEDGERNAME>'
470	:	Write File Line : 	'	        <ISDEEMEDPOSITIVE>'+@@PIDeemedPos+'</ISDEEMEDPOSITIVE>'
480	:	Write File Line : 	'	        <AMOUNT>'+@@PIAmount+'</AMOUNT>'
490	:	Write File Line : 	'	       </ACCOUNTINGALLOCATIONS.LIST>'
500	:	Write File Line : 	'	      </ALLINVENTORYENTRIES.LIST>'
501 : End If 
502 : End Walk
503 : End Walk

510	:	Write File Line : 	'	      <LEDGERENTRIES.LIST>'
520	:	Write File Line : 	'	       <LEDGERNAME>'+##vSupplierAccount+'</LEDGERNAME>'
530	:	Write File Line : 	'	       <ISDEEMEDPOSITIVE>'+@@PIDeemedPosNo+'</ISDEEMEDPOSITIVE>'
540	:	Write File Line : 	'	       <ISPARTYLEDGER>Yes</ISPARTYLEDGER>'
550	:	Write File Line : 	'	       <AMOUNT>'+@@PIPartyAmount+'</AMOUNT>'
560	:	Write File Line : 	'	       <BILLALLOCATIONS.LIST>'
570	:	Write File Line : 	'	        <NAME>'+@@PIReferenceNO+'</NAME>'
580	:	Write File Line : 	'	        <BILLTYPE>New Ref</BILLTYPE>'
590	:	Write File Line : 	'	        <AMOUNT>'+@@PIPartyAmount+'</AMOUNT>'
600	:	Write File Line : 	'	       </BILLALLOCATIONS.LIST>'
610	:	Write File Line : 	'	      </LEDGERENTRIES.LIST>'

611 : Call: CreateItemEntriesAsLedgerEntries


612 : Walk Collection: tpurchaseinvoice
613 : Do If: $apply_discount_on  = "Net Total" and (Not $$IsEmpty:$discount_amount) : Call: CreateNetTotalLedEntry
614 : Walk Collection: taxes

615 : Do If: ($$IsEmpty:$name:Ledger:($$Trim_abbr:$account_head)) : Call: CreateAccountHead:$account_head
620	:	Write File Line : 	'	      <LEDGERENTRIES.LIST>'
630	:	Write File Line : 	'	       <LEDGERNAME>'+@@PIAccountHead+'</LEDGERNAME>'
640	:	Write File Line : 	'	       <ISDEEMEDPOSITIVE>'+@@PIDeemedPos+'</ISDEEMEDPOSITIVE>'
650	:	Write File Line : 	'	       <AMOUNT>'+@@PILedEntTaxAMount+'</AMOUNT>'
660	:	Write File Line : 	'	       <VATEXPAMOUNT>'+@@PILedEntTaxAMount+'</VATEXPAMOUNT>'
670	:	Write File Line : 	'	      </LEDGERENTRIES.LIST>'

675 : End Walk
676 : Do If: $apply_discount_on  = "Grand Total" and (NOt $$IsEmpty:$discount_amount) : Call: CreateGrandTotalLedEntry
678 : End Walk


739 : If: $rounding_adjustment != 0
740	:	Write File Line : 	'	      <LEDGERENTRIES.LIST>'
750	:	Write File Line : 	'	       <LEDGERNAME>Rounded Off</LEDGERNAME>'
760	:	Write File Line : 	'	       <ISDEEMEDPOSITIVE>'+@@PIRoundOffDeemed+'</ISDEEMEDPOSITIVE>'
770	:	Write File Line : 	'	       <AMOUNT>'+$$String:@@PIRoundOff+'</AMOUNT>'
790	:	Write File Line : 	'	      </LEDGERENTRIES.LIST>'
791 : End If

791a: Walk Collection: tpurchaseinvoice
791b:	Write File Line : 	'	      <REFERENCE>'+$bill_no+'</REFERENCE>'
791c:	Write File Line : 	'	      <REFERENCEDATE>'+$$GetTallyDate:@@bill_date+'</REFERENCEDATE>'
791d:	Write File Line : 	'	      <EFFECTIVEDATE>'+$$GetTallyDate:@@bill_eff_date+'</EFFECTIVEDATE>'

792	:	Write File Line : 	'	      <UDF:SALESMAN.LIST DESC="`salesman`" ISLIST="YES" TYPE="String" INDEX="100">'
793	:	Write File Line : 	'	       <UDF:SALESMAN DESC="`salesman`">'+ @@material_received_by +'</UDF:SALESMAN>'
794	:	Write File Line : 	'	      </UDF:SALESMAN.LIST>'

795	:	Write File Line : 	'      <UDF:PVDTPTNAME.LIST DESC="`PVD TPT Name`" ISLIST="YES" TYPE="String" INDEX="201">'
796	:	Write File Line : 	'       <UDF:PVDTPTNAME DESC="`PVD TPT Name`">'+$purch_transporter_name +'</UDF:PVDTPTNAME>'
797	:	Write File Line : 	'      </UDF:PVDTPTNAME.LIST>'

798	:	Write File Line : 	'      <UDF:PVDTPTLRNO.LIST DESC="`PVD TPT LR No`" ISLIST="YES" TYPE="String" INDEX="202">'
799	:	Write File Line : 	'       <UDF:PVDTPTLRNO DESC="`PVD TPT LR No`">'+$purch_bilty_no+'</UDF:PVDTPTLRNO>'
800	:	Write File Line : 	'      </UDF:PVDTPTLRNO.LIST>'

801	:	Write File Line : 	'      <UDF:PVDTPTLRDT.LIST DESC="`PVD TPT LR Dt`" ISLIST="YES" TYPE="Date" INDEX="203">'
802	:	Write File Line : 	'       <UDF:PVDTPTLRDT DESC="`PVD TPT LR Dt`">'+ $$GetTallyDate:@@purch_bilty_date +'</UDF:PVDTPTLRDT>'
803	:	Write File Line : 	'      </UDF:PVDTPTLRDT.LIST>'

804	:	Write File Line : 	'      <UDF:PVDTPTLRVALUE.LIST DESC="`PVD TPT LR Value`" ISLIST="YES" TYPE="Amount" INDEX="204">'
805	:	Write File Line : 	'       <UDF:PVDTPTLRVALUE DESC="`PVD TPT LR Value`">'+$$String:$purch_bilty_amount+'</UDF:PVDTPTLRVALUE>'
806	:	Write File Line : 	'      </UDF:PVDTPTLRVALUE.LIST>'

807	:	Write File Line : 	'      <UDF:PVDTPTLRPKGS.LIST DESC="`PVD TPT LR PKGS`" ISLIST="YES" TYPE="String" INDEX="205">'
808	:	Write File Line : 	'       <UDF:PVDTPTLRPKGS DESC="`PVD TPT LR PKGS`">'+$$String:$Packages+'</UDF:PVDTPTLRPKGS>'
809	:	Write File Line : 	'      </UDF:PVDTPTLRPKGS.LIST>'

810	:	Write File Line : 	'      <UDF:PVDTPTLRPKGSUNIT.LIST DESC="`PVD TPT LR PKGS Unit`" ISLIST="YES" TYPE="String" INDEX="209">'
811	:	Write File Line : 	'       <UDF:PVDTPTLRPKGSUNIT DESC="`PVD TPT LR PKGS Unit`">'+$purch_pkgs_uom+'</UDF:PVDTPTLRPKGSUNIT>'
812	:	Write File Line : 	'      </UDF:PVDTPTLRPKGSUNIT.LIST>'

813	:	Write File Line : 	'      <UDF:PVDTPTLRWT.LIST DESC="`PVD TPT LR Wt`" ISLIST="YES" TYPE="String" INDEX="210">'
814	:	Write File Line : 	'       <UDF:PVDTPTLRWT DESC="`PVD TPT LR Wt`">'+ $$String:$bilty_weight +'</UDF:PVDTPTLRWT>'
815	:	Write File Line : 	'      </UDF:PVDTPTLRWT.LIST>'

816	:	Write File Line : 	'      <UDF:BILTYPACKAGES.LIST DESC="`Biltypackages`" ISLIST="YES" TYPE="Number" INDEX="193">'
817	:	Write File Line : 	'       <UDF:BILTYPACKAGES DESC="`Biltypackages`"> '+ $$String:$Packages+'</UDF:BILTYPACKAGES>'
818	:	Write File Line : 	'      </UDF:BILTYPACKAGES.LIST>'


819	:	Write File Line : 	'      <UDF:PVDPURINVNO.LIST DESC="`PVD Pur Inv No`" ISLIST="YES" TYPE="String" INDEX="206">'
820	:	Write File Line : 	'       <UDF:PVDPURINVNO DESC="`PVD Pur Inv No`">'+$bill_no+'</UDF:PVDPURINVNO>'
821	:	Write File Line : 	'      </UDF:PVDPURINVNO.LIST>'

822	:	Write File Line : 	'      <UDF:PVDPURINVDT.LIST DESC="`PVD Pur Inv Dt`" ISLIST="YES" TYPE="Date" INDEX="207">'
823	:	Write File Line : 	'       <UDF:PVDPURINVDT DESC="`PVD Pur Inv Dt`">'+$$GetTallyDate:$bill_date+'</UDF:PVDPURINVDT>'
824	:	Write File Line : 	'      </UDF:PVDPURINVDT.LIST>'

825	:	Write File Line : 	'      <UDF:PVDPURINVASSESSVALUE.LIST DESC="`PVD Pur Inv Assess Value`" ISLIST="YES" TYPE="Amount" INDEX="209">'
826	:	Write File Line : 	'       <UDF:PVDPURINVASSESSVALUE DESC="`PVD Pur Inv Assess Value`">'+$$String:$purch_inv_assess_value +'</UDF:PVDPURINVASSESSVALUE>'
827	:	Write File Line : 	'      </UDF:PVDPURINVASSESSVALUE.LIST>'

828	:	Write File Line : 	'      <UDF:PVDPURINVVALUE.LIST DESC="`PVD Pur Inv Value`" ISLIST="YES" TYPE="Amount" INDEX="208">'
829	:	Write File Line : 	'       <UDF:PVDPURINVVALUE DESC="`PVD Pur Inv Value`">'+$$String:$purch_inv_amt+'</UDF:PVDPURINVVALUE>'
830	:	Write File Line : 	'      </UDF:PVDPURINVVALUE.LIST>'

831	:	Write File Line : 	'      <UDF:ARRANGEBY.LIST DESC="`arrangeby`" ISLIST="YES" TYPE="String" INDEX="101">'
832	:	Write File Line : 	'       <UDF:ARRANGEBY DESC="`arrangeby`">'+$$String:$checked_by+'</UDF:ARRANGEBY>'
833	:	Write File Line : 	'      </UDF:ARRANGEBY.LIST>'

890 :	Write File Line	:	'		<NARRATION>' + $$Trim:@@PIRemarks+ '</NARRATION>'
900 : End Walk

910	:	Write File Line : 	'      <UDF:WEBSTATUS.LIST DESC="`WebStatus`" ISLIST="YES" TYPE="String" INDEX="31588">'
911	:	Write File Line : 	'       <UDF:WEBSTATUS DESC="`WebStatus`">1</UDF:WEBSTATUS>'
912	:	Write File Line : 	'      </UDF:WEBSTATUS.LIST>'

913	:	Write File Line : 	'      <UDF:WEBSTATUS_MESSAGE.LIST DESC="`WebStatus_message``EnableERPNextKey`" ISLIST="YES" TYPE="String" INDEX="31589">'
915	:	Write File Line : 	'       <UDF:WEBSTATUS_MESSAGE DESC="`WebStatus_message``EnableERPNextKey`">Success</UDF:WEBSTATUS_MESSAGE>'
918	:	Write File Line : 	'      </UDF:WEBSTATUS_MESSAGE.LIST>'

920	:	Write File Line : 	'      <UDF:ENABLEERPNEXTSECRET.LIST DESC="`EnableERPNextSecret``WebStatus_DocName`" ISLIST="YES" TYPE="String" INDEX="31590">'
922	:	Write File Line : 	'       <UDF:ENABLEERPNEXTSECRET DESC="`EnableERPNextSecret``WebStatus_DocName`">'+$Name+'</UDF:ENABLEERPNEXTSECRET>'
924	:	Write File Line : 	'      </UDF:ENABLEERPNEXTSECRET.LIST>'

1000	:	Write File Line : 	'	     </VOUCHER>'
1050	:	Write File Line : 	'	    </TALLYMESSAGE>'


[System : Formula]

	PISupplier_Name : $supplier_name
	PIAction		: if $docstatus = "2" then "Cancel" else "Create"

	PIVoucherType 	: $$GetVchTypeByNaming:@@GEOPurcSeries ; if ##is_return = 0 then $$GetVchTypeByNaming:@@GEOPurcSeries else $$GetVchTypeByNaming:@@GEOPurcSeries ;$$GEODebitNoteVchType:@@GEOPurcSeries
	GEOPurcSeries	: $tpurchaseinvoice[1].naming_series
	
	PIDeemedPos 	: if ##is_return = 0 then "Yes" else "No"
	PIDeemedPosNo	: if ##is_return = 0 then "No" else "Yes"
	
	PIAmount		: if ##is_return = 0 then if $amount < 0 then $$String:@@PIAbsAmount else '-'+$$String:@@PIAbsAmount else $$String:@@PIAbsAmount
	PIPartyAmount	: if ##is_return = 0 then $$String:@@PIAbsPartyAmount else '-'+$$String:@@PIAbsPartyAmount
	PITaxAmount		: if ##is_return = 0 then '-'+$$String:@@PIAbsTaxAMount else $$String:@@PIAbsTaxAMount
	
	PIQty			: if ##is_return = 0 then $$String:@@PIAbsQty else $$String:@@PIAbsQty

	PIUom			: If not $IsSimpleUnit:Unit:$BaseUnits:StockItem:$item_code  then $BaseUnits:Unit:$BaseUnits:StockItem:$item_code else $uom
	
	PIAbsAmount			: if $$Number:$Amount < 0 then $$Number:$amount * -1 else $amount
	PIAbsQty			: if $$Number:$qty < 0 then $$Number:$qty * -1 else $$Number:$Qty
	
	PIAbsPartyAmount	: if $$Number:$base_rounded_total <0 then $$Number:$base_rounded_total * -1 else $base_rounded_total
	PIAbsTaxAMount		: if $$Number:$tax_amount_after_discount_amount <0 then $$Number:$tax_amount_after_discount_amount * -1 else $tax_amount_after_discount_amount ;$$Abs:$tax_amount_after_discount_amount
	
	PIRoundOffDeemed	: if ##is_return = 0 then "Yes" else "No"
	PIRoundOff			: if $rounding_adjustment > 0 then "-" + $$String:@@PIRoundAbs else $$String:@@PIRoundAbs
	PIRoundAbs			: if $$Number:$rounding_adjustment <0 then $$Number:$rounding_adjustment * -1 else $rounding_adjustment ; $$Abs:$rounding_adjustment 


	material_received_by	: if ##is_return = 0 then $material_received_by else $checked_by
	
	PIAccountHead : $$Trim_abbr:$account_head

	PILedEntTaxAMount	: 	if ##is_return = 0 then +
								if $tax_amount_after_discount_amount < 0 then $$String:@@PIAbsTaxAMount +
								else "-" +$$String:@@PIAbsTaxAMount +
							else + 
								if $tax_amount_after_discount_amount > 0 then "-"+$$String:@@PIAbsTaxAMount +
								else $$String:@@PIAbsTaxAMount 


	PIRemarks	: $remarks ;+ " " + $etpl_additional_remarks 

	PIPurchaseLEd : $$Trim_abbr:$expense_account ; 
	
	bill_date : $bill_date
;			 if ##is_return = 0 then +
;					if $$IsEmpty:$bill_date then "" else $bill_date +
;				else +
;					$bill_date

	bill_eff_date : if ##is_return = 0 then +
					if $$IsEmpty:$bill_date then "" else $bill_date +
				else +
					$etpl_suppcndt


	purch_bilty_date : if $$IsEmpty:$purch_bilty_date then "" else $purch_bilty_date

	PIReferenceNO : if ##is_return = 0 then if $$IsEmpty:$bill_no then $tpurchaseinvoice[1].name else $bill_no else $tpurchaseinvoice[1].etpl_suppcnno


[Function: CreateNetTotalLedEntry]
	
620	:	Write File Line : 	'	      <LEDGERENTRIES.LIST>'
630	:	Write File Line : 	'	       <LEDGERNAME>Extra Discount</LEDGERNAME>'
640	:	Write File Line : 	'	       <ISDEEMEDPOSITIVE>'+@@PIDeemedPos+'</ISDEEMEDPOSITIVE>'
650	:	Write File Line : 	'	       <AMOUNT>'+@@PIExtraDiscountAmt+'</AMOUNT>'
660	:	Write File Line : 	'	       <VATEXPAMOUNT>'+@@PIExtraDiscountAmt+'</VATEXPAMOUNT>'
670	:	Write File Line : 	'	      </LEDGERENTRIES.LIST>'

	
[Function: CreateGrandTotalLedEntry]

620	:	Write File Line : 	'	      <LEDGERENTRIES.LIST>'
630	:	Write File Line : 	'	       <LEDGERNAME>Extra Discount</LEDGERNAME>'
640	:	Write File Line : 	'	       <ISDEEMEDPOSITIVE>'+@@PIDeemedPos+'</ISDEEMEDPOSITIVE>'
650	:	Write File Line : 	'	       <AMOUNT>'+@@PIExtraDiscountAmt+'</AMOUNT>'
660	:	Write File Line : 	'	       <VATEXPAMOUNT>'+@@PIExtraDiscountAmt+'</VATEXPAMOUNT>'
670	:	Write File Line : 	'	      </LEDGERENTRIES.LIST>'

[System : Formula]
	
	PIExtraDiscountAmt : if ##is_return = 0 then $$String:$discount_amount else "-"+ $$String:$discount_amount
	

[Function: CreateItemEntriesAsLedgerEntries]
	
	08 : Walk Collection: tpurchaseinvoice
	10 : Walk Collection: items
	12 : If: $item_group = "Service Item"
	20	:	Write File Line : 	'	      <LEDGERENTRIES.LIST>'
	30	:	Write File Line : 	'	       <LEDGERNAME>'+@@PIItemAsLedgerAccountHead+'</LEDGERNAME>'
	40	:	Write File Line : 	'	       <ISDEEMEDPOSITIVE>'+@@PIDeemedPos+'</ISDEEMEDPOSITIVE>'
	50	:	Write File Line : 	'	       <AMOUNT>'+@@PIItemAsLedgerAMount+'</AMOUNT>'
	60	:	Write File Line : 	'	       <VATEXPAMOUNT>'+@@PIItemAsLedgerAMount+'</VATEXPAMOUNT>'
	70	:	Write File Line : 	'	      </LEDGERENTRIES.LIST>'
	75 : End If
	80 : End Walk
	90 : End Walk

[System : Formula]
	
	PIItemAsLedgerAccountHead   : $$Trim_abbr:$item_name
	PIItemAsLedgerAMountABS 	: if $$Number:$amount < 0 then $$Number:$amount * -1 else $$Number:$amount
	PIItemAsLedgerAMount 		: if ##is_return = 0 then "-"+ $$String:@@PIItemAsLedgerAMountABS else $$String:@@PIItemAsLedgerAMountABS


[Function: CreateAccountHead]
	
	Parameter: vName : String

	08 : Set: vName : $$Trim_abbr:##vName

	10 : New Object: Ledger
	20 : 	Set Value: NAme : ##vName
	30 : 	Set Value: Parent : "Duties and Taxes"
	40 : Create Target
	



[Function: CreateStockGroup]
		
	Parameter: vGroup : String
	
	10 : New Object: StockGroup
	20 : 	Set Value: Name : ##vGroup 
	30 : Create Target

	
	
[Function: CreateUnits]

	Parameter : vUnit : String

	08 : If: $$IsEmpty:($Name:Unit:##vUnit)
	10 : New Object: Unit
	30 : 	Set Value: Name : ##vUnit
	40 : 	Set Value: ASORIGINAL : Yes
	50 : 	Set Value: ISSIMPLEUNIT : Yes
	60 : Create Target
	70 : End If 
	

[Function: CreateWarehouse]

	Parameter : vName : String

	Variable: vAbbrName : String: $$trim_abbr:##vName

	08 : If: $$IsEmpty:($Name:Godown:##vAbbrName)
	10 : New Object: Godown 
	30 : 	Set Value: Name : ##vAbbrName
	40 : 	Set Value: ASORIGINAL : Yes
	60 : Create Target
	70 : End If 

[Function: CreateCustomer]

	Parameter: vName : String
	Parameter:  vParent: String
	Parameter: vGSTIN : String
	Parameter: vAddress : String
	Parameter: vPlaceSupply : String
	
	Parameter: contact_display	: String
	Parameter: contact_email	: String
	Parameter: contact_mobile	: String
	
	Parameter: etpl_city		: String
	Parameter: etpl_tehsil		: String
	Parameter: etpl_district	: String
	Parameter: etpl_pan		: String
	Parameter: etpl_dob		: String
	Parameter: etpl_dom		: String
	Parameter: etpl_pincode : String
	
	Local Formula: POSStartingAt : 3
	Local Formula: POSLength : $$StringLength:##vPlaceSupply

	07 : Set: vPlaceSupply : $$StringPart:##vPlaceSupply:@POSStartingAt:@POSLength

	08 : If: $$IsEmpty:($Name:Ledger:##vName)
	10 : New Object: Ledger 
	30 : 	Set Value: Name 	: $$trim_abbr:##vName
	40 : 	Set Value: Parent 	: ##vParent
	42 : 	Set Value: PartyGSTIN : ##vGSTIN
	43 : 	Set Value: LedStateName	: ##vPlaceSupply
	44 : 	Set Value: CountryName	: @@CMPCountry

	46 : 	If: Not $$IsEmpty:@@ERPNextAddress1
	47 :		Insert Collection Object: Address
	48 : 		Set Value: Address  : @@ERPNextAddress1
	49 : 		Set Target: ..
	50 : 	End If
	
	51 : 	If: Not $$IsEmpty:@@ERPNextAddress2
	52 :		Insert Collection Object: Address
	53 : 		Set Value: Address  : @@ERPNextAddress2
	54 : 		Set Target: ..
	55 : 	End If

	56 : 	If: Not $$IsEmpty:@@ERPNextAddress3
	57 :		Insert Collection Object: Address
	58 : 		Set Value: Address  : @@ERPNextAddress3
	59 : 		Set Target: ..
	60 : 	End If
	
	61 : Set Value: Ledger Contact 	: ##contact_display
	62 : Set Value: Ledger Mobile 	: ##contact_mobile
	63 : Set Value: Email 			: ##contact_email
	64 : Set Value: GSTRegistrationType	 : if $$IsEmpty:##vGSTIN then "Consumer" else "Regular"
	65 : Set Value: PartyGSTIN		: ##vGSTIN
	66 : Set Value: Pincode			: ##etpl_pincode
	67 : Set Value: LEDCity			: ##etpl_city
	68 : Set Value: LEDTehsil		: ##etpl_tehsil
	69 : Set Value: LEDDistrict		: ##etpl_district
	70 : Set Value: IncomeTaxNumber	: ##etpl_pan
	
	71 : Set Value: LEDDOB			: $$Date:##etpl_dob
	72 : Set Value: LEDDOM			: $$Date:##etpl_dom

	90 : Create Target

;;; Alter Target
	100 : Else

;	110 : New Object: Ledger : ##vName : YEs
;	130 : 	Set Value: Name 	: $$trim_abbr:##vName
;	140 : 	Set Value: Parent 	: ##vParent
;	142 : 	Set Value: PartyGSTIN : ##vGSTIN
;	143 : 	Set Value: LedStateName	: ##vPlaceSupply
;	144 : 	Set Value: CountryName	: @@CMPCountry
;
;	146 : 	If: Not $$IsEmpty:@@ERPNextAddress1
;	147a: 		Insert Collection Object: Address
;	148 : 		Set Value: Address  : @@ERPNextAddress1
;	149 : 		Set Target: ..
;	150 : 	End If
;	
;	151 : 	If: Not $$IsEmpty:@@ERPNextAddress2
;	151a: 		Insert Collection Object: Address
;	153 : 		Set Value: Address  : @@ERPNextAddress2
;	154 : 		Set Target: ..
;	155 : 	End If
;
;	156 : 	If: Not $$IsEmpty:@@ERPNextAddress3
;	156a: 		Insert Collection Object: Address
;	158 : 		Set Value: Address  : @@ERPNextAddress3
;	159 : 		Set Target: ..
;	160 : 	End If
;	
;	170 : Alter Target

	180 : End If 

	[System: Formula]

		ERPNextAddress1 : if $$IsEmpty:##vAddress then "" else $$Trim_Address:($$StringWordEx:##vAddress:"<br>":1)
		ERPNextAddress2 : if $$IsEmpty:##vAddress then "" else $$Trim_Address:($$StringWordEx:##vAddress:"<br>":2)
		ERPNextAddress3 : if $$IsEmpty:##vAddress then "" else $$Trim_Address:($$StringWordEx:##vAddress:"<br>":3)

;;;;;; Stock Item Create and update 

	[Function : CreateItems]
		
		Parameter: vName 	: String
		Parameter: vPartNo 	: String
		Parameter: vGroup 	: String
		Parameter: vUnits 	: String
		Parameter: vHsnCode : String
		Parameter: vGSTRate : Number
		Parameter: vApplicableFrom : Date
		Variable: vTaxability 	: String: "Taxable"

		08 : Do If: ($$IsEmpty:$Name:StockGroup:##vGroup) : Call: CreateStockGroup:##vGroup
		09 : Do If: ($$IsEmpty:$Name:Unit:##vUnits) : Call: CreateUnits:##vUnits
		
		55 : IF : $$IsEmpty:($Name:StockItem:##vPartNo)
		60 : 	NEW OBJECT 		: STOCKITEM 
		65 :		Set Value  : Name 			: ##vName
		70 : 		Set Value  : Base Units 	: ##vUnits
		75 : 		Do If:##vName !=##vPartNo:  Set Value  : Partno  		: ##vPartNo
		80 : 		Set Value  : Parent  		: ##vGroup
		90 : 		Set Value  : GSTAPPLICABLE 	: $$SysName:Applicable
		95 : 		Set Value  : GSTTYPEOFSUPPLY 	: "Goods"
		100 : 		Set Value  : ISBATCHWISEON 		: No
		
		105	: 		Insert Collection Object: GSTDETAILS
		110 : 			Set Target: GSTDETAILS
		115 : 			Set Value: APPLICABLEFROM 	: @@CmpStartDate
		120 : 			Set Value: CALCULATIONTYPE 	: "On Value"
		125 : 			Set Value: HSNCODE		 	: ##vHsnCode
		130 : 			Set Value: HSN		 		: ##vName
		135 : 			Set Value: TAXABILITY 		: ##vTaxability
		
		140 : 			If: ##vTaxability = "Taxable"
		145 : 				Set Value: ISREVERSECHARGEAPPLICABLE : No
		150 : 				Set Value: ISNONGSTGOODS 		: No
		155 : 				Set Value: GSTINELIGIBLEITC 	: No
		160 : 				Insert Collection Object: STATEWISEDETAILS
		165 : 					Set Target: STATEWISEDETAILS
		170 : 					Set Value: STATENAME : $$SysName:Any
		175 : 						Insert Collection Object: RATEDETAILS
		180 : 							Set Target	: RATEDETAILS
		185	:							Set Value	: GSTRATEDUTYHEAD  		: "Central Tax"
		186 :							Set Value	: GSTRATEVALUATIONTYPE 	: "Based on Value"
		187 :							Set Value	: GSTRATE				: ##vGSTRate / 2
		188 : 						Insert Collection Object: RATEDETAILS
		189 : 							Set Target	: RATEDETAILS
		190	:							Set Value	: GSTRATEDUTYHEAD  		: "State Tax"
		191 :							Set Value	: GSTRATEVALUATIONTYPE 	: "Based on Value"
		192 :							Set Value	: GSTRATE				: ##vGSTRate / 2
		193 : 						Insert Collection Object: RATEDETAILS
		194 : 							Set Target	: RATEDETAILS
		195	:							Set Value	: GSTRATEDUTYHEAD  		: "Integrated Tax"
		196 :							Set Value	: GSTRATEVALUATIONTYPE 	: "Based on Value"
		197 :							Set Value	: GSTRATE				: ##vGSTRate
;		198 : 						Insert Collection Object: RATEDETAILS
;		199 : 							Set Target	: RATEDETAILS
;		200	:							Set Value	: GSTRATEDUTYHEAD  		: "Cess"
;		201 :							Set Value	: GSTRATEVALUATIONTYPE 	: "Based on Value"
;		202 :							Set Value	: GSTRATE				: 
		203 : 						Set Target: ...
		204 : 			End If
		205 : 		Set Target: ..
		250	: 	Create Target
		260 : Else 
;; Alter
/*
		272 : NEW OBJECT : STOCKITEM : ##vPartNo
		274	: 	Set Value  : Parent  : ##vGroup

;		274a: Log: "=============="
;		274b: Log: $ItemCurrentTaxRate:StockITem:##vPartNo
;		274c: Log: ##vGSTRate
;		274d: Log: $ItemCurrentHsnCode:StockITem:##vPartNo
;		274e: Log: $$String:##vHsnCode
;		274f: Log: "=============="

		275 : If: $ItemCurrentTaxRate:StockITem:##vPartNo != ##vGSTRate or $ItemCurrentHsnCode:StockITem:##vPartNo != ##vHsnCode
		275a : Call: DeleteGSTDetails1:##vName:##vApplicableFrom

		276	: 	Set Value  : GSTAPPLICABLE : $$SysName:Applicable
		278	: 	Set Value  : GSTTYPEOFSUPPLY : "Goods"
		280	: 	Set Value  : ISBATCHWISEON : No
			
		282	: 	Insert Collection Object: GSTDETAILS
		284 : 		Set Target: GSTDETAILS
		286 : 		Set Value: APPLICABLEFROM 	: ##vApplicableFrom
		288 : 		Set Value: CALCULATIONTYPE 	: "On Value"
		300 : 		Set Value: HSNCODE		 	: ##vHsnCode
		302 : 		Set Value: HSN		 		: ##vName
		304 : 		Set Value: TAXABILITY 		: ##vTaxability
		306 : 		If: ##vTaxability = "Taxable"
		308 : 			Set Value: ISREVERSECHARGEAPPLICABLE : No
		310 : 			Set Value: ISNONGSTGOODS 		: No
		312 : 			Set Value: GSTINELIGIBLEITC 	: No
		314 : 			Insert Collection Object: STATEWISEDETAILS
		316 : 				Set Target: STATEWISEDETAILS
		318 : 				Set Value: STATENAME : $$SysName:Any
		320 : 				Insert Collection Object: RATEDETAILS
		322 : 					Set Target	: RATEDETAILS
		324	:					Set Value	: GSTRATEDUTYHEAD  		: "Central Tax"
		326 :					Set Value	: GSTRATEVALUATIONTYPE 	: "Based on Value"
		328 :					Set Value	: GSTRATE				: ##vGSTRate / 2
		330 : 				Insert Collection Object: RATEDETAILS
		332 : 					Set Target	: RATEDETAILS
		334	:					Set Value	: GSTRATEDUTYHEAD  		: "State Tax"
		336 :					Set Value	: GSTRATEVALUATIONTYPE 	: "Based on Value"
		338 :					Set Value	: GSTRATE				: ##vGSTRate / 2
		340 : 				Insert Collection Object: RATEDETAILS
		342 : 					Set Target	: RATEDETAILS
		345	:					Set Value	: GSTRATEDUTYHEAD  		: "Integrated Tax"
		348 :					Set Value	: GSTRATEVALUATIONTYPE 	: "Based on Value"
		350 :					Set Value	: GSTRATE				: ##vGSTRate
;		352 : 				Insert Collection Object: RATEDETAILS
;		355 :	 				Set Target	: RATEDETAILS
;		358	:					Set Value	: GSTRATEDUTYHEAD  		: "Cess"
;		360 :					Set Value	: GSTRATEVALUATIONTYPE 	: "Based on Value"
;		361 :					Set Value	: GSTRATE				: $
		363 : 			Set Target: ...
		365 : 		End If
		367 :	Set Target: ..
		368 : End If 
		
		380	: Accept Alter
*/
		500 : End IF

	[#Object: StockItem]
		
		ItemGstApplicableDate 	: $GSTDETAILS[-1].APPLICABLEFROM
		ItemCurrentTaxRate	 	: $GSTDETAILS[-1].STATEWISEDETAILS[1].RATEDETAILS[3].GSTRATE
		ItemCurrentHsnCode		: $GSTDETAILS[-1].HSNCODE

[Function: DeleteGSTDetails1]

	Parameter: StockItem : String
	Parameter: vvDate : Date

	Object		: Stock Item	: ##StockItem
	
	01	: SET TARGET
	15	: IF : $$FilterCount:GSTDETAILS:IsGSTSameDate > 0
	20	: 		DELETE COLLECTION OBJECT	: GSTDETAILS : 1	: @@IsGSTSameDate
	25	: END IF
	30	: SET TARGET	: ..
	35	: ACCEPT ALTER


	[System: Formula]
		
		IsGSTSameDate : $ApplicableFrom= ##vvDate






